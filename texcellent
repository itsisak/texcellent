#!/bin/zsh
##########################################################################################
# 
# ████████╗███████╗██╗  ██╗ ██████╗███████╗██╗     ██╗     ███████╗███╗   ██╗████████╗
# ╚══██╔══╝██╔════╝╚██╗██╔╝██╔════╝██╔════╝██║     ██║     ██╔════╝████╗  ██║╚══██╔══╝
#   ██║   █████╗   ╚███╔╝ ██║     █████╗  ██║     ██║     █████╗  ██╔██╗ ██║   ██║   
#   ██║   ██╔══╝   ██╔██╗ ██║     ██╔══╝  ██║     ██║     ██╔══╝  ██║╚██╗██║   ██║   
#   ██║   ███████╗██╔╝ ██╗╚██████╗███████╗███████╗███████╗███████╗██║ ╚████║   ██║   
#   ╚═╝   ╚══════╝╚═╝  ╚═╝ ╚═════╝╚══════╝╚══════╝╚══════╝╚══════╝╚═╝  ╚═══╝   ╚═╝   
#
##########################################################################################
#
# TEXcellent is a custom program containing;
# - A CLI for creating new LaTeX projects from custom templates
# - Defining custom macros
#

# TODO: Update usage guide
source $TEXCELLENT_DIR/utils/usage 

function texcellent () {
    if [[ $# -eq 0 ]]; then usage_help; exit 1; fi

    flag_count=0
    flag_new_project=0
    flag_new_file=0
    flag_open=0
    template="basic"

    # Parse all flags
    while getopts ":hcpfo" opt; do
        case $opt in
            h) # Help (aborts rest of commands)
                usage_help
                return 0
                ;;
            c) # Count words in file (1 arg -> filename)
                flag_count=1    
                break
                ;;
            p) # New project (1 arg -> project_name)
                flag_new_project=1
                ;;
            f)
                flag_new_file=1
                ;;
            o) # Open project (no args, end of command)
                flag_open=1
                ;;
            \?)
                echo Invalid option: -$OPTARG >&2
                ;;
        esac
    done

    # If there were flags/options then shift
    if [[ $1 == -* ]]; then shift; fi

    # Update template if given
    if [[ $# -ge 2 ]]; then template=$2; fi

    # Count words in directory / file
    if [ $flag_count -ne 0 ]; then
        if [[ -d $1 && -n $1 ]]; then 
            tot_count=0
            printf "%-30s   %5s\n" "FILENAME" "WC"
            for file in $1/**/*.tex(.); do
                file_count=$(detex "$file" | wc -w | tr -d ' ')
                printf "%-30s | %5d\n" ${file:0:30} $file_count
                ((tot_count += $file_count))
            done
            printf "%-30s | %5d\n" "TOTAL" $tot_count
            return 0
        elif [[ -s $1 && -n $1 ]]; then
            echo "Wordcount:" $(detex "$1" | wc -w | tr -d ' ')
            return 0
        fi
        echo "Error: Not a valid directory or file"
        return 1
    fi

    # Create a new project / file
    if [ $flag_new_project -ne 0 ]; then 
        echo Creating $1 project
        mkdir $1
        file_path="./$1"
    elif [ $flag_new_file -ne 0 ]; then
        echo Creating $1.tex file
        file_path="."
    fi

    if (( ${+file_path} )); then
        touch "$file_path/$1.tex"
        cat "$TEXCELLENT_DIR/templates/$template.tex" >> "$file_path/$1.tex"
        touch "$file_path/.vimrc"
        cat "$TEXCELLENT_DIR/utils/tex-vimrc" >> "$file_path/.vimrc"
    fi

    # Open project if flag and path is set
    if [ $flag_open -ne 0 ]; then 
        (( ${+file_path} )) && vim $file_path || vim $1
    fi

}

# Todo: Textify latex command

tx () { texcellent "$@" }


